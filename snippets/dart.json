{
  // Place your snippets for dart here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  ////////////////////////// Main //////////////////////////
  "Create main": {
    "isFileTemplate": true,
    "prefix": "main",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "import 'app.dart';",
      "import 'locator.dart';",
      "",
      "void main() {",
      "  setup${1:Name}Locator();",
      "",
      "  runApp(const ${1:Name}App());",
      "}"
    ],
    "description": "Create main"
  },

  ////////////////////////// App //////////////////////////
  "Create Material app": {
    "isFileTemplate": true,
    "prefix": "matapp",
    "body": [],
    "description": ""
  },

  "Create Cupertino App": {
    "isFileTemplate": true,
    "prefix": "cupapp",
    "body": [],
    "description": ""
  },

  ////////////////////////// Routes //////////////////////////
  "Create routes": {
    "isFileTemplate": true,
    "prefix": "routes",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "import 'view.dart';",
      "",
      "class ${1:Name}Routes {",
      "  static const String home = '/';",
      "",
      "  // other views",
      "  // static const String view = '/view'; // sn. backslashString$2",
      "",
      "  // subsections",
      "  // static const String sub = '/sub'; // sn. backslashString$4",
      "",
      "  static Map<String, Widget Function(BuildContext)> get routes => {",
      "        home: (context) => const ${1:Name}View(),",
      "        // view: (context) => const IView(), // sn. newRoute$3",
      "        // ...SubRoutes.routes.map((key, value) => MapEntry(sub + key, value)), // sn. subRoutes$5",
      "",
      "      };",
      "",
      "  static get pathsFromHome => [",
      "        // sub + SubRoutes.home, // sn. pathsFromHome$6",
      "      ];",
      "}"
    ],
    "description": "Create routes"
  },

  "New Route": {
    "prefix": "newRoute",
    "body": [
      "${1:name}: (context) => const ${2:Name}View(), // sn. newRoute",
    ],
    "description": ""
  },
  "Sub Routes": {
    "prefix": "subRoutes",
    "body": [
      "...${1:Sub}Routes.routes.map((key, value) => MapEntry(${2:sub} + key, value)), // sn. subRoutes",

    ],
    "description": ""
  },

  "Paths From Home": {
    "prefix": "pathsFromHome",
    "body": [
      "${1:sub} + ${2:Sub}Routes.home, // sn. pathsFromHome",
    ],
    "description": ""
  },

  "Icons From Home":{
    "prefix": "iconsFromHome",
    "body": [
      "${1:Par}Routes.${2:sub} + ${3:Sub}Routes.home: Icons.${4:help}, // sn. iconsFromHome",
    ],
    "description": ""
  },

  "Back Slash String": {
    "prefix": "backslashString",
    "body": "static const String $1 = '/$1'; sn. backslashString",
    "description": "Back Slash Static Const String"
  },

  ////////////////////////// Locator //////////////////////////

  "Create locator": {
    "isFileTemplate": true,
    "prefix": "locator",
    "body": [
      "import 'package:mypack/locator.dart';",
      "",
      "import 'api.dart';",
      "void setup${1:Name}Locator() {",
      "",
      "  final l = locator;",
      "",
      "  // services",
      "  l.registerLazySingleton<${2:Dumb$1}Api>(() => ${2:Dumb$1}Api());",
      "  // l.registerLazySingletonAsync<RealApi>(() => $RealApi.init());",
      "",
      "  // viewmodels",
      "  // l.registerFactory<EgModel>(() => EgModel());",
      "",
      "  // subsections",
      "  // setupEgLocator();",
      "",

      "}"
    ],
    "description": "Create locator"
  },
  ////////////////////////// Views //////////////////////////
  "Create Cupertino View": {
    "isFileTemplate": true,
    "prefix": "cupview",
    "body": [
      "import 'package:flutter/cupertino.dart';",
      "import 'package:mypack/ui/views/view.dart';",
      "",
      "const String title = '${1:Name}';",
      "",
      "class ${1:Name}View extends StatelessWidget {",
      "  const ${1:Name}View({super.key});",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return IView<${1:Name}Model>(",
      "      initModel: (model) => model.init(),",
      "      builder: (context, model, _) => CupertinoPageScaffold(",
      "        navigationBar: const CupertinoNavigationBar(",
      "          middle: Text(title),",
      "        ),",
      "        child: ${2:Placeholder()},",
      "      ),",
      "    );",
      "    ;",
      "  }",
      "}"
    ],
    "description": "Create Cupertino View"
  },

  "Create View Model": {
    "prefix": "vmodel",
    "body": [],
    "description": "Create Cupertino View"
  },
  ////////////////////////// Service //////////////////////////
  "Create Api Model": {
    "prefix": "amodel",
    "body": [],
    "description": "Create Api Model"
  },
  "Create DataBaseColumnEntry in table": {
    "prefix": "dbcol",
    "body": [
      "static DatabaseColumnEntry col$1 = DatabaseColumnEntry(",
      "   table: tableName,",
      "   id: $2,",
      "   name: '$3',",
      "   type: DatabaseColumnType.$4,",
      "   def: '$5');"
    ],
    "description": "Add DatabaseColumnEntry in IDatabaseTable"
  }
  ////////////////////////// Rest //////////////////////////
}
